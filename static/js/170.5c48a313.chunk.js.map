{"version":3,"file":"static/js/170.5c48a313.chunk.js","mappings":"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","sources":["API/api.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = `419c8d7d79cbcac22c5520f1ac14d2c7`;\n\nexport async function fetchMovies(){\n     const { data } = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`);\n      return data;     \n};\n\nexport async function fetchSearchMovies(searchName) {\n     const { data } = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchName}`);\n      return data;     \n  };\n\nexport async function fetchSelectedMovie(movie_id){\n  const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=en-US`);\n      return data;     \n  };\n   \nexport async function fetchMovieInfo(movie_id, meaning) {\n  const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}/${meaning}?api_key=${API_KEY}&language=en-US`);\n     return data;     \n  };\n    \n","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const MovieCard = styled.section`\n  width: 100%;\n  display: flex;\n\n  background-color: yellow;\n`;\n\nexport const MovieName = styled.h2`\n  font-size: 30px;\n`;\nexport const MovieText = styled.p`\n  font-size: 16px;\n`;\nexport const MoviePoster = styled.img`\n  width: 300px;\n  background-color: yellowgreen;\n`;\nexport const MovieTextName = styled.span`\n  font-size: 20px;\n  font-weight: bold;\n`;\nexport const MovieInformSection = styled.div`\n  margin-left: 20px;\n  padding: 10px;\n  width: 100%;\n`;\nexport const AdditionalInformation = styled.div`\n  width: 100%;\n  margin-left: 20px;\n  margin-top: 10px;\n  border-top: solid 3px grey;\n  border-bottom: solid 3px grey;\n`;\nexport const AdditionalName = styled.p`\n  font-size: 20px;\n  margin: 0px;\n`;\nexport const AdditionalList = styled.ul``;\nexport const AdditionalItem = styled.li``;\nexport const AdditionalLink = styled(NavLink)`\n  font-size: 14px;\n  margin-left: 10px;\n  text-decoration: none;\n  cursor: pointer;\n  &.active {\n    color: orange;\n  }\n`;\nexport const ButtonBack = styled(Link)`\n  font-size: 14px;\n  margin-left: 20px;\n  text-decoration: none;\n`;\nexport const IconBack = styled.span`\n  margin-right: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix';\nimport { FcLeft } from 'react-icons/fc';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\n\nimport {\n  MovieCard,\n  MovieName,\n  MovieText,\n  MovieTextName,\n  MoviePoster,\n  MovieInformSection,\n  AdditionalInformation,\n  AdditionalName,\n  AdditionalLink,\n  AdditionalList,\n  AdditionalItem,\n  ButtonBack,\n  IconBack,\n} from './MovieDetails.styled';\nimport { fetchSelectedMovie } from 'API/api';\n\nconst MovieDetails = () => {\n  const [title, setTitle] = useState('');\n  const [overview, setoverview] = useState('');\n  const [genres, setgenres] = useState([]);\n  const [poster_path, setposter_path] = useState('');\n  const [popularity, setpopularity] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const novigate = useNavigate();\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    setLoading(true);\n    fetchSelectedMovie(movieId)\n      .then(({ title, overview, genres, poster_path, popularity }) => {\n        setTitle(title);\n        setoverview(overview);\n        setgenres(genres);\n        setposter_path(poster_path);\n        setpopularity(popularity);\n      })\n\n      .catch(error => {\n        if (error.response.status === 404) {\n          Notify.failure('No movie on this request');\n          novigate('/', { replace: true });\n        }\n      })\n      .finally(() => setLoading(false));\n  }, [movieId, novigate]);\n\n  const ganreList = genres.map(ganre => ganre.name).join(', ');\n\n  function posterPath(poster_path) {\n    if (poster_path === '') {\n      return;\n    }\n    if (poster_path === null) {\n      return Notify.warning('No poster');\n    }\n\n    return `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  }\n\n  return (\n    <>\n      {title && (\n        <>\n          <ButtonBack to={backLinkHref}>\n            <IconBack>\n              {' '}\n              <FcLeft />\n            </IconBack>\n            Go back\n          </ButtonBack>\n          <MovieCard>\n            {loading && <ThreeDots color=\"#00BFFF\" height={60} width={60} />}\n\n            <MoviePoster\n              src={posterPath(poster_path)}\n              alt=\"photo movie\"\n            ></MoviePoster>\n            <MovieInformSection>\n              <MovieName>{title}</MovieName>\n              <MovieText>\n                <MovieTextName>Popularity:</MovieTextName> {popularity}\n              </MovieText>\n              <MovieTextName>Overview</MovieTextName>{' '}\n              <MovieText> {overview}</MovieText>\n              <MovieTextName>Genres</MovieTextName>\n              <MovieText>{ganreList}</MovieText>\n            </MovieInformSection>\n          </MovieCard>\n          <AdditionalInformation>\n            <AdditionalName>Additional information</AdditionalName>\n            <AdditionalList>\n              <AdditionalItem>\n                <AdditionalLink to={'cast'} state={{ from: backLinkHref }}>\n                  Cast\n                </AdditionalLink>\n              </AdditionalItem>\n              <AdditionalItem>\n                <AdditionalLink to={'reviews'} state={{ from: backLinkHref }}>\n                  Reviews\n                </AdditionalLink>\n              </AdditionalItem>\n            </AdditionalList>\n            <Outlet />\n          </AdditionalInformation>\n        </>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["API_KEY","fetchMovies","axios","data","fetchSearchMovies","searchName","fetchSelectedMovie","movie_id","fetchMovieInfo","meaning","MovieCard","styled","MovieName","MovieText","MoviePoster","MovieTextName","MovieInformSection","AdditionalInformation","AdditionalName","AdditionalList","AdditionalItem","AdditionalLink","NavLink","ButtonBack","Link","IconBack","useState","title","setTitle","overview","setoverview","genres","setgenres","poster_path","setposter_path","popularity","setpopularity","loading","setLoading","movieId","useParams","backLinkHref","useLocation","state","from","novigate","useNavigate","useEffect","then","catch","error","response","status","Notify","replace","finally","ganreList","map","ganre","name","join","to","color","height","width","src","posterPath","alt"],"sourceRoot":""}