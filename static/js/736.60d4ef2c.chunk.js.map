{"version":3,"file":"static/js/736.60d4ef2c.chunk.js","mappings":"oSACMA,EAAO,mCAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACqBC,IAAAA,IAAA,gEAAmEF,IADxF,uBACMG,EADN,EACMA,KADN,kBAEMA,GAFN,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,yFACqBH,IAAAA,IAAA,4DAA+DF,EAA/D,4DAA0HK,IAD/I,uBACMF,EADN,EACMA,KADN,kBAEMA,GAFN,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,yFACkBL,IAAAA,IAAA,6CAAgDK,EAAhD,oBAAoEP,EAApE,oBADlB,uBACGG,EADH,EACGA,KADH,kBAEMA,GAFN,kEAKA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,WAA8BD,EAAUE,GAAxC,yFACkBP,IAAAA,IAAA,6CAAgDK,EAAhD,YAA4DE,EAA5D,oBAA+ET,EAA/E,oBADlB,uBACGG,EADH,EACGA,KADH,kBAEKA,GAFL,oE,uHChBMO,EAAcC,EAAAA,GAAAA,QAAH,qHAMXC,EAAWD,EAAAA,GAAAA,GAAH,qFAKRE,EAAWF,EAAAA,GAAAA,GAAH,wIAORG,EAAWH,EAAAA,GAAAA,EAAH,6DAKRI,EAAYJ,EAAAA,GAAAA,IAAH,wC,kBCoBtB,EAlCa,WACX,OAA0BK,EAAAA,EAAAA,GAAS,WAA3Bb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,QACRC,EAAOf,EAAKe,KAClB,GAAKA,EAAL,CAUA,IAAIC,EAAUD,EAAKE,MAAM,EAAG,IAE5B,OACE,UAACV,EAAD,WACGO,IAAW,SAAC,KAAD,CAAWI,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KACzC,IAAhBL,EAAKM,QACJ,SAACZ,EAAD,UACGO,EAAQM,KAAI,SAAAC,GAAI,OACf,UAACb,EAAD,YACE,SAACC,EAAD,UAAWY,EAAKC,QAEhB,SAACZ,EAAD,CAAWa,KAjBHC,EAiBmBH,EAAKI,aAhBtB,OAAhBD,EACKE,EAEH,mCAAN,OAA0CF,IAaeG,IAAI,iBAHtCN,EAAKO,IAd9B,IAAoBJ,QAsBd,SAACf,EAAD,yD,0GCnCKE,EAAW,SAACP,GACvB,OAAwByB,EAAAA,EAAAA,UAAS,IAAjC,eAAO/B,EAAP,KAAagC,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOjB,EAAP,KAAgBmB,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcN,OAZFE,EAAAA,EAAAA,YAAU,WACHF,IAGLD,GAAW,IACX5B,EAAAA,EAAAA,IAAe6B,EAAQ5B,GACpB+B,MAAK,SAAArC,GACJgC,EAAQhC,MAETsC,OAAM,SAAAC,GAAK,OAAIC,EAAAA,OAAAA,QAAe,kCAC9BC,SAAQ,kBAAMR,GAAW,SAC3B,CAACC,EAAS5B,IACJ,CAAEN,KAAAA,EAAMc,QAAAA,K","sources":["API/api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","hooks/useFethc.js"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = `419c8d7d79cbcac22c5520f1ac14d2c7`;\n\nexport async function fetchMovies(){\n     const { data } = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`);\n      return data;     \n};\n\nexport async function fetchSearchMovies(searchName) {\n     const { data } = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchName}`);\n      return data;     \n  };\n\nexport async function fetchSelectedMovie(movie_id){\n  const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=en-US`);\n      return data;     \n  };\n   \nexport async function fetchMovieInfo(movie_id, meaning) {\n  const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}/${meaning}?api_key=${API_KEY}&language=en-US`);\n     return data;     \n  };\n    \n","import styled from 'styled-components';\n\nexport const CastSection = styled.section`\n  width: 100%;\n  /* text-align: center; */\n  padding: 10px;\n  background-color: #aaf7bd;\n`;\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  text-align: center;\n`;\nexport const CastItem = styled.li`\n  background-color: yellow;\n  width: 120px;\n  list-style: none;\n  margin-right: 5px;\n  margin-bottom: 5px;\n`;\nexport const CastName = styled.p`\n  height: 20px;\n  font-size: 14px;\n`;\n\nexport const CastPhoto = styled.img`\n  width: 100%;\n`;\n\n","import { ThreeDots } from 'react-loader-spinner';\nimport { useFetch } from 'hooks/useFethc';\nimport {\n  CastSection,\n  CastItem,\n  CastList,\n  CastName,\n  CastPhoto,\n} from './Cast.styled';\nimport boy from '../../Photo/boy.jpg';\n\nconst Cast = () => {\n  const { data, loading } = useFetch('credits');\n  const cast = data.cast;\n  if (!cast) {\n    return;\n  }\n\n  function posterPath(poster_path) {\n    if (poster_path === null) {\n      return boy;\n    }\n    return `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  }\n  let newCast = cast.slice(0, 21);\n\n  return (\n    <CastSection>\n      {loading && <ThreeDots color=\"#00BFFF\" height={60} width={60} />}\n      {cast.length !== 0 ? (\n        <CastList>\n          {newCast.map(item => (\n            <CastItem key={item.id}>\n              <CastName>{item.name}</CastName>\n\n              <CastPhoto src={posterPath(item.profile_path)} alt=\"photo cast\" />\n            </CastItem>\n          ))}\n        </CastList>\n      ) : (\n        <CastName>We dont have any cast for this movie</CastName>\n      )}\n    </CastSection>\n  );\n};\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport {  fetchMovieInfo } from 'API/api';\n\nexport const useFetch = (meaning) => {\n  const [data, setdata] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    setLoading(true);\n    fetchMovieInfo(movieId,meaning)\n      .then(data => {\n        setdata(data);\n      })\n      .catch(error => Notify.failure('Ooooops somthing went wrong'))\n      .finally(() => setLoading(false));\n  }, [movieId, meaning]);\n    return { data, loading };\n}\n"],"names":["API_KEY","fetchMovies","axios","data","fetchSearchMovies","searchName","fetchSelectedMovie","movie_id","fetchMovieInfo","meaning","CastSection","styled","CastList","CastItem","CastName","CastPhoto","useFetch","loading","cast","newCast","slice","color","height","width","length","map","item","name","src","poster_path","profile_path","boy","alt","id","useState","setdata","setLoading","movieId","useParams","useEffect","then","catch","error","Notify","finally"],"sourceRoot":""}