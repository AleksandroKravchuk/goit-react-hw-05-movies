{"version":3,"file":"static/js/683.a69a80e2.chunk.js","mappings":"oSACMA,EAAO,mCAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACqBC,IAAAA,IAAA,gEAAmEF,IADxF,uBACMG,EADN,EACMA,KADN,kBAEMA,GAFN,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,yFACqBH,IAAAA,IAAA,4DAA+DF,EAA/D,4DAA0HK,IAD/I,uBACMF,EADN,EACMA,KADN,kBAEMA,GAFN,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,yFACkBL,IAAAA,IAAA,6CAAgDK,EAAhD,oBAAoEP,EAApE,oBADlB,uBACGG,EADH,EACGA,KADH,kBAEMA,GAFN,kEAKA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,WAA8BD,EAAUE,GAAxC,yFACkBP,IAAAA,IAAA,6CAAgDK,EAAhD,YAA4DE,EAA5D,oBAA+ET,EAA/E,oBADlB,uBACGG,EADH,EACGA,KADH,kBAEKA,GAFL,oE,4FCfMO,EAAWC,EAAAA,GAAAA,GAAH,oDAGRC,EAAYD,EAAAA,GAAAA,GAAH,iFAKTE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,4C,mBCRTI,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACR,EAAD,WACGM,EAAaG,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,cAAeC,EAAlC,EAAkCA,GAAlC,OAChB,SAACV,EAAD,WACE,UAACC,EAAD,CAAWU,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA/C,UACGG,EADH,IACoBC,MAFNC,MAKd,S,4FCVK,SAASI,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMH,KAAKM,GFInF,CAAgBJ,KAAQ,EAAAO,EAAA,GAA2BP,IGLvE,WACb,MAAM,IAAIQ,UAAU,wIHIwE,G,oEIHjFC,EAAazB,EAAAA,GAAAA,KAAH,mFAKV0B,EAAQ1B,EAAAA,GAAAA,MAAH,qIASL2B,EAAe3B,EAAAA,GAAAA,OAAH,mS,6BC8CzB,EAtDa,WACX,OAAmC4B,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOvB,EAAP,KAAqB4B,EAArB,KACA,GAA8BL,EAAAA,EAAAA,WAAS,GAAvC,eAAOM,EAAP,KAAgBC,EAAhB,MAOAC,EAAAA,EAAAA,YAAU,WACW,KAAfL,IAGJI,GAAW,IACX1C,EAAAA,EAAAA,IAAkBsC,GACfM,MAAK,YAA8C,IAA3CC,EAA0C,EAA1CA,QAA0C,EAAjCC,YACM,IAD2B,EAApBC,eAE3BC,EAAAA,OAAAA,QACE,4EAGJR,EAAgB,EAAIK,OAErBI,OAAM,SAAAC,GAAK,OAAIF,EAAAA,OAAAA,QAAe,kCAC9BG,SAAQ,kBAAMT,GAAW,SAC3B,CAACJ,IAeJ,OACE,iCACE,UAACN,EAAD,CAAYoB,SAXK,SAAAC,GAEnB,GADAA,EAAIC,iBACqB,KAArBlB,EAAUmB,OACZ,OAAOP,EAAAA,OAAAA,QAAe,2BAGxBT,EAAcH,GACdC,EAAc,KAIZ,WACE,SAACJ,EAAD,CAAOuB,MAAOpB,EAAWqB,SAhBT,SAAAJ,GACpB,IAAQG,EAAUH,EAAIK,OAAdF,MACRnB,EAAcmB,OAeV,SAACtB,EAAD,CAAcyB,KAAK,SAAnB,uBAEDlB,IAAW,SAAC,KAAD,CAAWmB,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KACzDlD,IAAgB,SAACD,EAAA,EAAD,CAAWC,aAAcA","sources":["API/api.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/pages/Movies/Movies.styled.jsx","components/pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = `419c8d7d79cbcac22c5520f1ac14d2c7`;\n\nexport async function fetchMovies(){\n     const { data } = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`);\n      return data;     \n};\n\nexport async function fetchSearchMovies(searchName) {\n     const { data } = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchName}`);\n      return data;     \n  };\n\nexport async function fetchSelectedMovie(movie_id){\n  const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=en-US`);\n      return data;     \n  };\n   \nexport async function fetchMovieInfo(movie_id, meaning) {\n  const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}/${meaning}?api_key=${API_KEY}&language=en-US`);\n     return data;     \n  };\n    \n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeList = styled.ul`\n  background-color: coral;\n`;\nexport const HomeMovie = styled.li`\n  margin-bottom: 10px;\n  font-size: 15px;\n  padding-l\n`;\nexport const MovieLink = styled(Link)`\n  font-size: 15px;\n`;\n","import { HomeList, HomeMovie, MovieLink } from './MovieList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ searchMovies }) => {\n  const location = useLocation();\n\n  return (\n    <HomeList>\n      {searchMovies.map(({ original_title, original_name, id }) => (\n        <HomeMovie key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            {original_title} {original_name}\n          </MovieLink>\n        </HomeMovie>\n      ))}{' '}\n    </HomeList>\n  );\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  width: 300px;\n  margin-left: 20px;\n  margin-top: 5px;\n`;\nexport const Input = styled.input`\n  width: 70%;\n  border-radius: 5px;\n\n  &:focus {\n    outline: none;\n    border: solid 2px orange;\n  }\n`;\nexport const SearchButton = styled.button`\n  padding: 3px 6px;\n  border-radius: 5px;\n  font-size: 10px;\n  margin-left: 10px;\n  border: 0.3px solid gray;\n  cursor: pointer;\n  transition: background-color 250ms linear, color 250ms linear;\n  &:hover {\n    background-color: gray;\n    color: beige;\n  }\n`;\n\n","import { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { SearchForm, Input, SearchButton } from './Movies.styled';\nimport { fetchSearchMovies } from 'API/api';\n// import { useSearchParams, useLocation } from 'react-router-dom';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Form = () => {\n  const [searcName, setSearchName] = useState('');\n  const [submitName, setSubmitName] = useState('');\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // const search = useSearchParams();\n  // const location = useLocation();\n\n  // console.log(search);\n  // console.log(location);\n  useEffect(() => {\n    if (submitName === '') {\n      return;\n    }\n    setLoading(true);\n    fetchSearchMovies(submitName)\n      .then(({ results, total_pages, total_results }) => {\n        if (total_results === 0) {\n          Notify.failure(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n        }\n        setSearchMovies([...results]);\n      })\n      .catch(error => Notify.failure('Ooooops somthing went wrong'))\n      .finally(() => setLoading(false));\n  }, [submitName]);\n\n  const addSearchName = evt => {\n    const { value } = evt.target;\n    setSearchName(value);\n  };\n  const hendelSubmit = evt => {\n    evt.preventDefault();\n    if (searcName.trim() === '') {\n      return Notify.warning('Please enter name movie');\n    }\n\n    setSubmitName(searcName);\n    setSearchName('');\n  };\n  return (\n    <>\n      <SearchForm onSubmit={hendelSubmit}>\n        <Input value={searcName} onChange={addSearchName} />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </SearchForm>\n      {loading && <ThreeDots color=\"#00BFFF\" height={60} width={60} />}\n      {searchMovies && <MovieList searchMovies={searchMovies} />}\n    </>\n  );\n};\n\nexport default Form;\n"],"names":["API_KEY","fetchMovies","axios","data","fetchSearchMovies","searchName","fetchSelectedMovie","movie_id","fetchMovieInfo","meaning","HomeList","styled","HomeMovie","MovieLink","Link","MovieList","searchMovies","location","useLocation","map","original_title","original_name","id","to","state","from","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","SearchForm","Input","SearchButton","useState","searcName","setSearchName","submitName","setSubmitName","setSearchMovies","loading","setLoading","useEffect","then","results","total_pages","total_results","Notify","catch","error","finally","onSubmit","evt","preventDefault","trim","value","onChange","target","type","color","height","width"],"sourceRoot":""}